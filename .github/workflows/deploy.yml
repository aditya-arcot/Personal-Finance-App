name: Deploy in Docker
on:
    workflow_call:
        inputs:
            runner:
                required: true
                type: string
            repo:
                required: true
                type: string
            server-docker-image:
                required: true
                type: string
            client-docker-image:
                required: true
                type: string
            docker-tag:
                required: true
                type: string

jobs:
    deploy:
        runs-on: ${{ inputs.runner }}
        environment: ${{ github.ref_name == 'main' && 'prod' || 'test' }}
        steps:
            - name: checkout
              uses: actions/checkout@v3

            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: 'lts/*'
                  cache: 'npm'

            - name: install, build (server)
              run: |
                  cd server/
                  npm ci
                  npm run build

            - name: create .env (server)
              run: |
                  cd server/
                  echo "NODE_ENV=${{ vars.NODE_ENV }}" >> .env
                  echo "LOG_LEVEL=${{ vars.LOG_LEVEL }}" >> .env
                  echo "SERVER_LOGTAIL_TOKEN=${{ vars.SERVER_LOGTAIL_TOKEN }}" >> .env
                  echo "SESSION_SECRET=${{ vars.SESSION_SECRET }}" >> .env
                  echo "CLIENT_LOGTAIL_TOKEN=${{ vars.CLIENT_LOGTAIL_TOKEN }}" >> .env
                  echo "DB_HOST=${{ vars.DB_HOST }}" >> .env
                  echo "DB_USER=${{ vars.DB_USER }}" >> .env
                  echo "DB_PASSWORD=${{ vars.DB_PASSWORD }}" >> .env
                  echo "DB_NAME=${{ vars.DB_NAME }}" >> .env

            - name: copy files (server)
              run: |
                  cd server/
                  mkdir stage
                  cp -r .env Dockerfile package.json package-lock.json dist stage/

            # - name: install, build - client
            #   run: |
            #       cd client/
            #       npm ci
            #       npm run build

            # - name: copy files - client
            #   run: |
            #       cd client/
            #       mkdir stage
            #       cp -r Dockerfile dist stage/

            - name: build, push docker image (server)
              run: |
                  cd server/stage
                  IMAGE=${{ vars.DOCKER_REGISTRY }}/${{ inputs.server-docker-image }}:${{ inputs.docker-tag }}
                  docker build -t $IMAGE .
                  docker push $IMAGE

            - name: start docker (server)
              run: |
                  cd server/stage
                  REPO=${{ inputs.repo }} \
                  REGISTRY=${{ vars.DOCKER_REGISTRY }} \
                  IMAGE=${{ inputs.server-docker-image }} \
                  TAG=${{ inputs.docker-tag }} \
                  docker-compose up -d
